{"version":3,"sources":["Counter.js","App.js","serviceWorker.js","index.js"],"names":["Counter","useState","countera","setcountera","counterb","setcounterb","foulsb","setfoulsb","foulsa","setfoulsa","seconds","setseconds","minutes","setminutes","isRunning","setIsRunning","useEffect","id","window","setInterval","clearInterval","className","Grid","item","xs","container","spacing","direction","justify","alignItems","onClick","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c51d60f6.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport \"./counter.scss\";\nimport { Grid } from \"@material-ui/core\";\n\nexport default function Counter() { \n  // state for counter a and b\n  var [countera, setcountera] = useState(0);\n  var [counterb, setcounterb] = useState(0);\n  \n  // state for fouls a and b\n  var [foulsb, setfoulsb] = useState(0);\n  var [foulsa, setfoulsa] = useState(0);\n  // state form minutes and seconds\n  var [seconds, setseconds] = useState(0);\n  var [minutes, setminutes] = useState(0);\n  // boolean state for is timer running?\n  var [isRunning, setIsRunning] = useState(false);\n  // if(foulsa > 5){\n  //   foulsa = 5;\n  // }\n\n  // minutes does not below 0 if it does minutes gets reset to 0\n  if(minutes < 0 ) {\n    setminutes( minutes = 0 );\n  }\n  // if the seconds are less than 10 add a 0 before seconds else display seconds\n  seconds = seconds < 10 ? '0' + seconds : seconds;\n  // if seconds go above 59 then +1 minute and set seconds as seconds % 10\n  if(seconds > '59') {\n    setseconds(seconds = seconds % 10);\n    setminutes( minutes + 1);\n  }\n  // if timer is running and seconds go below 0 and minutes are more than 0, set seconds to 59 and -1 from minutes\n  if(isRunning && seconds < '00' && minutes !== 0 ) {\n    setseconds(seconds = 59)\n    setminutes( minutes - 1);\n  } \n  // if timer is not running and seconds go below 00 and minutes are above 0 set seconds to 50 and -1 from minutes\n  if(isRunning === false && seconds < '00' && minutes !== 0 ) {\n    setseconds(seconds = 50);\n    setminutes( minutes - 1);\n  } \n  // if the timer reaches 0 the timer stops by setting minutes and seconds to 0 and setting isRunning to false\n  if(minutes === 0 && seconds < '00' ) {\n    setseconds( seconds = 0 );\n    setminutes( minutes = 0 );\n    setIsRunning(false);\n  }\n\n  // if timer is running set interval to -1 from seconds every second else clear interval\n  useEffect(() => {\n    if (isRunning) {\n      var id = window.setInterval(() => {\n        setseconds(seconds => seconds - 1);\n      }, 1000);\n      return () => window.clearInterval(id);\n    }\n    return undefined;\n  }, [isRunning]);\n\n  return(\n\n    <div className=\"app-container\">\n      <Grid className=\"timer-container\" item xs={12} container spacing={2}>\n        <Grid item xs={3} \n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\">\n          <button id=\"timerPlus10s\" onClick={() => setseconds( seconds => seconds + 10 )}>+10s</button>\n          <button id=\"timerPlus1min\" onClick={() => setminutes( minutes => minutes + 1 )}>+1 min</button>\n        </Grid>\n        <Grid item xs={6}\n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\">\n        <div className=\"timer\">\n          <span id=\"min\" className=\"minutes\">{minutes}</span>:<span id=\"sec\" className=\"seconds\">{seconds}</span>\n        </div>\n        <div className=\"buttons\">\n          {isRunning\n          ? (\n        <button id=\"start-stop\" onClick={() => {\n          setIsRunning(false);\n        }}>Stop\n        </button>\n          ) : (\n        <button id=\"start-stop\" onClick={() => setIsRunning(true)}>\n        Start\n        </button>\n          )\n        }\n        <button id=\"reset-timer\" onClick={() => {\n          setseconds( seconds = 0 );\n          setminutes( minutes = 0 );\n          setIsRunning(false);\n        }}>Reset</button>\n        </div>\n        </Grid>\n        <Grid item xs={3} \n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\">\n        <button id=\"timerMinus10s\" onClick={() => setseconds( seconds => seconds - 10 )}>-10s</button>\n        <button id=\"timerMinus1min\" onClick={() => setminutes( minutes => minutes - 1 )}>-1 min</button>\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        <h1 id=\"score\">Score</h1>\n      </Grid>\n      <Grid container spacing={2}>\n      <Grid item xs={6}             \n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\">\n      <div id=\"team-a\">TEAM A</div>\n      </Grid>\n      <Grid item xs={6}             \n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\">\n      <div id=\"team-b\">TEAM B</div>\n      </Grid>\n      </Grid>\n      <Grid className=\"score-container\" container spacing={2}>\n        <Grid item xs={3} \n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"flex-end\">\n          <button id=\"increment-btna\" onClick={() => setcountera( countera + 1 )}>+1</button>\n          <button id=\"increment3-btna\" onClick={() => setcountera( countera + 3 )}>+3</button>\n          <button id=\"decrement-btna\" onClick={() => countera <= 0 ? countera = 0 : setcountera( countera - 1 )}>-1</button>\n          <button id=\"reset-btna\" onClick={() => setcountera( countera = 0 )}>Reset</button>\n        </Grid>\n        <Grid item xs={3} \n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\">\n          <div id=\"counter-valuea\">{countera}</div>\n          </Grid>\n          <Grid item xs={3} \n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\">\n          <div id=\"counter-valueb\">{counterb}</div>\n          </Grid>\n          <Grid item xs={3} \n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"flex-start\">\n          <button id=\"increment-btnb\" onClick={() => setcounterb( counterb + 1 )}>+1</button>\n          <button id=\"increment3-btnb\" onClick={() => setcounterb( counterb + 3 )}>+3</button>\n          <button id=\"decrement-btnb\" onClick={() => counterb <= 0 ? counterb = 0 :setcounterb( counterb - 1 )}>-1</button>\n          <button id=\"reset-btnb\" onClick={() => setcounterb( counterb = 0 )}>Reset</button>\n          </Grid>\n        </Grid>\n        <Grid className=\"fouls-title\" container spacing={2}>\n        <Grid item xs={6}             \n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\">\n            <div className=\"fouls-teama\">FOULS</div>\n          </Grid>\n          <Grid item xs={6}\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\">\n            <div className=\"fouls-teamb\">FOULS</div>\n          </Grid>\n        </Grid>\n        <Grid className=\"fouls-container\" container spacing={4} >\n        <Grid item xs={3}\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"flex-end\">\n            <button id=\"foulsplus1-btna\" onClick={() => foulsa >= 5 ? foulsa =5 : setfoulsa( foulsa + 1)}>+1</button>\n            <button id=\"fouls-btna\" onClick={() => setfoulsa( foulsa = 0 )}>Reset</button>\n          </Grid>\n          <Grid item xs={3}\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"center\">\n            <div id=\"fouls-a\">{foulsa}</div>\n\n          </Grid>\n          <Grid item xs={3}\n            container\n            direction=\"row\"\n            justify=\"flex-end\"\n            alignItems=\"center\">\n            <div id=\"fouls-b\">{foulsb}</div>\n          </Grid>\n          <Grid item xs={3}\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"flex-start\">\n            <button id=\"foulsplus1-btnb\" onClick={() => foulsb >= 5 ? foulsb = 5 : setfoulsb( foulsb + 1)}>+1</button>\n            <button id=\"fouls-btnb\" onClick={() => setfoulsb( foulsb = 0 )}>Reset</button>\n          </Grid>\n        </Grid>\n    </div> \n  )\n}","import React from 'react';\nimport Counter from './Counter.js';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Counter/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}